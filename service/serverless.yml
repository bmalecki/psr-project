service: uploadservice
frameworkVersion: '>=1.28.0 <2.0.0'

provider:
  name: aws
  runtime: go1.x
  memorySize: 256
  apiGateway:
      binaryMediaTypes:
        - 'image/*'
  stage: dev
  region: us-east-1
  environment:
    UPLOAD_IMAGE_STORAGE_ID: !Ref UploadImageStorage
    ANALYZE_IMAGE_QUEUE_URL: !Ref AnalyzeImageQueue
    TEXTRACT_QUEUE_URL: !Ref TextractQueue
    TEXTRACT_SNS_ARN: !Ref AmazonTextractSNSTopic
    IMAGE_TABLE: !Ref ImageTable
    # MOCK_AI: true

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource: 
        - Fn::Join:
            - ""
            - - Fn::GetAtt: UploadImageStorage.Arn
              - "/*"

    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
      Resource: 
        - !GetAtt AnalyzeImageQueue.Arn

    - Effect: "Allow"
      Action:
        - "sqs:*"
      Resource: 
        - !GetAtt TextractQueue.Arn

    - Effect: "Allow"
      Action: 
        - "dynamodb:PutItem"
        - "dynamodb:Scan"
        - "dynamodb:UpdateItem"
      Resource:
        - !GetAtt ImageTable.Arn

    - Effect: "Allow"
      Action:
        - "textract:*"
      Resource:
        - "*"

    - Effect: Allow
      Action: 
        - "sqs:SendMessage"
      Resource: !GetAtt TextractQueue.Arn
      Condition:
        ArnEquals:
          aws:SourceArn: !Ref AmazonTextractSNSTopic

    - Effect: Allow
      Action: 
        - "sns:Publish"
      Resource: !Ref AmazonTextractSNSTopic
  
package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  upload:
    handler: bin/uploadS3
    events:
      - http:
          path: upload
          method: post
  afterupload:
    handler: bin/triggerS3
    events:
      - s3:
          bucket: !Ref UploadImageStorage
          event: s3:ObjectCreated:*
          existing: true
  analyze:
    handler: bin/analyze
    events:
      - sqs:
          arn: !GetAtt AnalyzeImageQueue.Arn


resources:
  Resources:
    UploadImageStorage:
      Type: AWS::S3::Bucket
    AnalyzeImageQueue:
      Type: AWS::SQS::Queue
      Properties: 
        QueueName: AnalyzeImageQueue
        DelaySeconds: 0

    TextractQueue:
      Type: AWS::SQS::Queue
      Properties: 
        QueueName: TextractQueue
        DelaySeconds: 0
    AmazonTextractSNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        Subscription:
          - Endpoint: !GetAtt TextractQueue.Arn
            Protocol: "sqs"
        TopicName: "AmazonTextractSNSTopic"


    ImageTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
        KeySchema:
          - AttributeName: Id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
