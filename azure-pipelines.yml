# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: project

steps:
- task: DownloadSecureFile@1
  name: awsCred
  displayName: Download AWS Credentials
  inputs:
    secureFile: aws.credentials

- script: |
    ln -s -t terraform/secrets/ $(awsCred.secureFilePath)
  displayName: Link secrets

- script: |
    cd terraform
    envsubst < backend.tf.template > backend.tf
    echo static_website = \"$WEB_DOMAIN\" >> secret.auto.tfvars
    terraform init
    terraform apply -auto-approve | sed -E s/'[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'/XXXXXX/g
  displayName: Run Terraform
  timeoutInMinutes: 10

- script: |
    ./scripts/deloy-lambda.sh
  displayName: Deploy lambda

- script: |
    ./scripts/deloy-static-files.sh
  displayName: Build and deploy frontend app

- script: |
    cd terraform
    terraform output static_website_endpoint_url
  displayName: Website url
